import 'package:flutter/material.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'mobile_navigation_bar.dart';export 'category_navigation_item/category_navigation_item.dart';export 'home_navigation_item/home_navigation_item.dart';export 'cart_navigation_item/cart_navigation_item.dart';class NavigationCubit extends Cubit<int> {  NavigationCubit() : super(0);  void changePage(int index) => emit(index);}class MobileNavigationBar extends StatelessWidget {  MobileNavigationBar({Key? key}) : super(key: key);  static const TextStyle optionStyle =      TextStyle(fontSize: 30, fontWeight: FontWeight.bold);  final pageController = PageController();  @override  Widget build(BuildContext context) {    List<Widget> _widgetOptions = <Widget>[      BlocProvider(create: (context) => HomeDelegateCubit(), child: const Home()),      BlocProvider(create: (context) => CategoryDelegateCubit(), child: const Category()),      BlocProvider(create: (context) => CartDelegateCubit(), child: const Cart()),    ];    return BlocBuilder<NavigationCubit, int>(      builder: (context, _selectedIndex) {        return Scaffold(          bottomNavigationBar: BottomNavigationBar(            items: const <BottomNavigationBarItem>[              BottomNavigationBarItem(                icon: Icon(Icons.home),                label: 'Home',              ),              BottomNavigationBarItem(                icon: Icon(Icons.category),                label: 'Category',              ),              BottomNavigationBarItem(                icon: Icon(Icons.shopping_cart),                label: 'Cart',              ),            ],            currentIndex: _selectedIndex,            selectedItemColor: Colors.blue,            onTap: (int index) => pageController.jumpToPage(index),          ),          body: PageView(            /// [NeverScrollableScrollPhysics] disables horizontal scroll through pages            /// and allow only navigation through BottomNavigationBarItem.            physics: const NeverScrollableScrollPhysics(),            children: _widgetOptions,            controller: pageController,            onPageChanged: (int index) =>                context.read<NavigationCubit>().changePage(index),          ),        );      },    );  }}