import 'package:flutter/material.dart';import 'package:flutter/foundation.dart';import 'package:flutter_bloc/flutter_bloc.dart';import 'package:go_router/go_router.dart';import '../screens/ui.dart';import 'navigation_bar/navigation_bar.dart';_webPageBuilder(BuildContext context, GoRouterState state, {required Widget child}) {  return NoTransitionPage<void>(    key: state.pageKey,    child: WebNavigationBar(      child: child,    ),  );}List<GoRoute> subRoutes = [  GoRoute(    path: 'account',    builder: (context, state) => const AccountScreen(),    pageBuilder: kIsWeb        ? (context, state) =>            _webPageBuilder(context, state, child: const AccountScreen())        : null,  ),];class AppRouterCubit extends Cubit<GoRouter> {  AppRouterCubit()      : super(          AppRouterInitial(            routes: [              GoRoute(                routes: subRoutes,                path: '/',                builder: (context, state) => BlocProvider(                    create: (context) => NavigationCubit(), child: MobileNavigationBar()),                // page builder used for web only                // to turn off transition between pages                pageBuilder: kIsWeb                    ? (context, state) =>                        _webPageBuilder(context, state, child: const HomeScreen())                    : null,              ),              GoRoute(                path: '/category',                routes: subRoutes,                builder: (context, state) => const CategoryScreen(),                pageBuilder: kIsWeb                    ? (context, state) =>                        _webPageBuilder(context, state, child: const CategoryScreen())                    : null,              ),              GoRoute(                path: '/cart',                routes: subRoutes,                builder: (context, state) => const CartScreen(),                pageBuilder: kIsWeb                    ? (context, state) =>                        _webPageBuilder(context, state, child: const CartScreen())                    : null,              ),            ],          ),        );  void push(String location) => state.push(location);// void parseURI(uri) => state.}class AppRouterInitial extends GoRouter {  AppRouterInitial({required List<GoRoute> routes})      : super(          routes: routes,          errorBuilder: (BuildContext context, GoRouterState state) =>              ErrorPage(state: state),        );}class ErrorPage extends StatelessWidget {  final GoRouterState state;  const ErrorPage({Key? key, required this.state}) : super(key: key);  @override  Widget build(BuildContext context) {    return Scaffold(      appBar: AppBar(title: Text('${state.error}')),      body: const Center(child: Text('Page not found')),    );  }}